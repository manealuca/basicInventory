@using Entitys
@using Business

@inject NavigationManager NavManager
<EditForm Model="oProduct">
    <div class="form-group">
        <label>Producto:</label>
        <InputText class="form-control" @bind-Value="oProduct.ProductName"/>
    </div>
    <div class="form-group">
        <label>Descripcion:</label>
        <InputTextArea class="form-control" @bind-Value="oProduct.ProductDescription"/>
    </div>
    <div class="form-group">
        <label>Categoria:</label>
        <InputSelect class="form-control" @bind-Value="oProduct.CategoryId">
           
            @foreach (var categorie in categories)
            {
                <option value="@categorie.CategoryId">@categorie.CategoryName</option>
            }  
        </InputSelect>
    </div>
    <input type="button" value="ModificarProducto" @onclick="UpdateProduct"></input>
</EditForm>

@code {
    [Parameter]
    public string IdProduct {get;set;}
    ProductEntity oProduct = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();
    protected override async Task OnInitializedAsync()
    {
        categories   = B_Category.categoryList();
        oProduct = B_Product.ProductById(IdProduct);
    }

    private void UpdateProduct()
    {
        try
        {
            B_Product.updateProduct(oProduct);
            NavManager.NavigateTo("product/list");
        } catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }

}
